version: "3.7"

services:
  postgres:
    container_name: agr-literature-pg
    image: postgres:13.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${PSQL_USERNAME}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DATABASE}
      POSTGRES_PORT: ${PSQL_PORT}
    volumes:
      - "agr-literature-pg-data:/var/lib/postgresql/data"
      - "./postgresql.conf:/etc/postgresql.conf"
    networks:
      - agr-literature
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: agr-literature-pgadmin
    image: dpage/pgadmin4:5.1
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      PGADMIN_LISTEN_PORT: 81
    ports:
      - "8882:81"
    volumes:
      - "agr-literature-pgadmin-data:/var/lib/pgadmin"
    networks:
      - agr-literature
    depends_on:
      - postgres

  elasticsearch:
    container_name: agr-literature-es
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    restart: always
    environment:
      - node.name=aws-literature-es1
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "agr-literature-es-data:/usr/share/elasticsearch/data"
    ports:
      - 9201:9200
    networks:
      - agr-literature

  redis:
    container_name: agr-literature-redis
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass ${REDIS_AUTH}
    ports:
     - "6379:6379"
    volumes:
      - agr-literature-redis-data
      - "./redis.conf:/usr/local/etc/redis/redis.conf"
    environment:
     - REDIS_REPLICATION_MODE=master
    networks:
      - agr-literature

#  agr_literature:
#    container_name: agr-literature-app
#    restart: always
#    image: ${REG}/agr_literature_app:latest
#    ports:
#      - 49160:8080
#    networks:
#      - agr-literature
#    depends_on:
#      - postgres
#      - redis
#      - elasticsearch
#

volumes:
  agr-literature-pg-data:
  agr-literature-redis-data:
  agr-literature-pgadmin-data:
  agr-literature-es-data:

networks:
  agr-literature:
