name: Alembic Migration Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-alembic-migrations:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for new Alembic migrations
        id: check-migrations
        run: |
          # Get the base branch reference
          BASE_REF="origin/${{ github.event.pull_request.base.ref }}"

          # Check if there are new migration files
          NEW_MIGRATIONS=$(git diff --name-only "$BASE_REF"...HEAD | grep -E "^alembic/versions/.*\.py$" | wc -l)

          echo "new_migrations=$NEW_MIGRATIONS" >> $GITHUB_OUTPUT

          if [ "$NEW_MIGRATIONS" -gt 0 ]; then
            echo "Found $NEW_MIGRATIONS new migration file(s)"
            git diff --name-only "$BASE_REF"...HEAD | grep -E "^alembic/versions/.*\.py$" | while read file; do
              echo "  - $file"
            done
          else
            echo "No new migration files found"
          fi

      - name: Comment on PR about migration
        if: steps.check-migrations.outputs.new_migrations != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const migrationCount = '${{ steps.check-migrations.outputs.new_migrations }}';

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🔄 Alembic Migration Detected')
            );

            if (!botComment) {
              const message = '🔄 **Alembic Migration Detected**\n\n' +
                'This PR contains **' + migrationCount + '** new Alembic migration file(s).\n\n' +
                '**⚠️ IMPORTANT: Database migrations must be applied before merging!**\n\n' +
                '**Recommended Steps:**\n' +
                '- [ ] Apply migrations to staging/development environment\n' +
                '- [ ] Verify migrations execute successfully\n' +
                '- [ ] Test rollback functionality\n' +
                '- [ ] Confirm with team lead/DBA\n\n' +
                '**Commands to apply migrations:**\n' +
                '```bash\n' +
                '# Apply latest migrations\n' +
                'make alembic-apply-latest-migration\n\n' +
                '# Or manually:\n' +
                'alembic upgrade head\n' +
                '```\n\n' +
                '> **Note:** This is a reminder to apply database migrations. No approval process is required.';

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });
            }
