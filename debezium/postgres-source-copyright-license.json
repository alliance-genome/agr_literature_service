{
  "name": "postgres-source-copyright_license",
  "config": {
    "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
    "tasks.max": "1",
    "slot.name": "debezium_copyright_license",
    "publication.name": "debezium_copyright_license",
    "database.hostname": "${PSQL_HOST}",
    "database.port": "${PSQL_PORT}",
    "database.user": "${PSQL_USERNAME}",
    "database.password": "${PSQL_PASSWORD}",
    "database.dbname" : "${PSQL_DATABASE}",
    "database.server.name": "abc",
    "table.include.list": "public.copyright_license",
    "database.history.kafka.bootstrap.servers": "dbz_kafka:9092",
    "decimal.handling.mode" : "string",
    "publication.autocreate.mode": "filtered",
    "heartbeat.interval.ms": "10000",
    "heartbeat.topics.prefix": "__debezium-heartbeat.copyright_license",
    "transforms": "extractKey,extractValue",
    "transforms.extractKey.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.extractKey.field": "copyright_license_id",
    "transforms.extractKey.predicate": "isData",
    "transforms.extractValue.type": "org.apache.kafka.connect.transforms.ExtractField$Value",
    "transforms.extractValue.field": "after",
    "transforms.extractValue.predicate": "isData",
    "predicates": "isData",
    "predicates.isData.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
    "predicates.isData.pattern": "abc\\.public\\.copyright_license",
    "plugin.name": "pgoutput",
    "database.tcpKeepAlive": "true",
    "database.tcpUserTimeout": "30000",
    "database.query.timeout.ms": "300000",
    "database.connectTimeout": "30000",
    "database.socketTimeout": "30000",
    "slot.stream.params.status_interval": "10s",
    "poll.interval.ms": "1500",
    "max.queue.size": "32768",
    "max.batch.size": "4096",
    "errors.tolerance": "all",
    "errors.deadletterqueue.topic.name": "debezium.errors.copyright_license",
    "errors.deadletterqueue.topic.replication.factor": "1",
    "errors.deadletterqueue.context.headers.enable": "true",
    "errors.log.enable": "true",
    "errors.log.include.messages": "true"
  }
}