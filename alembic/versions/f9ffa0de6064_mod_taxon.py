"""mod_taxon

Revision ID: f9ffa0de6064
Revises: 3b6a5e1a1b4b
Create Date: 2022-08-03 15:14:24.810643

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f9ffa0de6064'
down_revision = '3b6a5e1a1b4b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'mod_taxon_version',
        sa.Column('date_created', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('date_updated', sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column('mod_taxon_id', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('mod_id', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('taxon', sa.Integer(), autoincrement=False, nullable=True),
        sa.Column('created_by', sa.String(), autoincrement=False, nullable=True),
        sa.Column('updated_by', sa.String(), autoincrement=False, nullable=True),
        sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
        sa.Column('operation_type', sa.SmallInteger(), nullable=False),
        sa.Column('date_created_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('date_updated_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('mod_id_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('taxon_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('created_by_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('updated_by_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.PrimaryKeyConstraint('mod_taxon_id', 'transaction_id')
    )
    op.create_index(op.f('ix_mod_taxon_version_end_transaction_id'), 'mod_taxon_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_mod_taxon_version_operation_type'), 'mod_taxon_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_mod_taxon_version_transaction_id'), 'mod_taxon_version', ['transaction_id'], unique=False)
    op.create_table(
        'mod_taxon',
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.Column('date_updated', sa.DateTime(), nullable=True),
        sa.Column('mod_taxon_id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('mod_id', sa.Integer(), nullable=False),
        sa.Column('taxon', sa.Integer(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('updated_by', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['mod_id'], ['mod.mod_id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('mod_taxon_id'),
        sa.UniqueConstraint('taxon')
    )

    op.create_unique_constraint("rccm_uniq", 'reference_comments_and_corrections', ['reference_id_from', 'reference_id_to', 'reference_comment_and_correction_type'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mod_taxon')
    op.drop_index(op.f('ix_mod_taxon_version_transaction_id'), table_name='mod_taxon_version')
    op.drop_index(op.f('ix_mod_taxon_version_operation_type'), table_name='mod_taxon_version')
    op.drop_index(op.f('ix_mod_taxon_version_end_transaction_id'), table_name='mod_taxon_version')
    op.drop_table('mod_taxon_version')
    op.drop_constraint("rccm_uniq", 'reference_comments_and_corrections')
    # ### end Alembic commands ###
