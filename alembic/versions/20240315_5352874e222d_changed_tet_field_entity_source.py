"""changed tet field entity source

Revision ID: 5352874e222d
Revises: f47df3ea10e9
Create Date: 2024-03-15 00:11:02.861612

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5352874e222d'
down_revision = 'f47df3ea10e9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    op.add_column('topic_entity_tag', sa.Column('entity_id_validation', sa.String(), nullable=True))
    conn.execute(sa.text("UPDATE topic_entity_tag SET entity_id_validation = entity_source"))
    op.drop_column('topic_entity_tag', 'entity_source')
    op.add_column('topic_entity_tag_version', sa.Column('entity_id_validation', sa.String(), autoincrement=False, nullable=True))
    conn.execute(sa.text("UPDATE topic_entity_tag_version SET entity_id_validation = entity_source"))
    op.add_column('topic_entity_tag_version', sa.Column('entity_id_validation_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    conn.execute(sa.text("UPDATE topic_entity_tag_version SET entity_id_validation_mod = entity_source_mod"))
    op.drop_column('topic_entity_tag_version', 'entity_source')
    op.drop_column('topic_entity_tag_version', 'entity_source_mod')

    op.drop_constraint('valid_entity_type_dependencies', 'topic_entity_tag', type_='check')

    # Add the new check constraint
    op.create_check_constraint(
        'valid_entity_type_dependencies',
        'topic_entity_tag',
        sa.sql.text("""
                    (
                        (entity_type IS NOT NULL AND entity IS NOT NULL AND entity_id_validation IS NOT NULL)
                        OR
                        (entity_type IS NULL AND entity IS NULL AND entity_id_validation IS NULL)
                    )
                """)
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    op.add_column('topic_entity_tag_version', sa.Column('entity_source_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    conn.execute(sa.text("UPDATE topic_entity_tag_version SET entity_source_mod = entity_id_validation_mod"))
    op.add_column('topic_entity_tag_version', sa.Column('entity_source', sa.VARCHAR(), autoincrement=False, nullable=True))
    conn.execute(sa.text("UPDATE topic_entity_tag_version SET entity_source = entity_id_validation"))
    op.drop_column('topic_entity_tag_version', 'entity_id_validation_mod')
    op.drop_column('topic_entity_tag_version', 'entity_id_validation')
    op.add_column('topic_entity_tag', sa.Column('entity_source', sa.VARCHAR(), autoincrement=False, nullable=True))
    conn.execute(sa.text("UPDATE topic_entity_tag SET entity_source = entity_id_validation"))
    op.drop_column('topic_entity_tag', 'entity_id_validation')

    op.drop_constraint('valid_entity_type_dependencies', 'topic_entity_tag', type_='check')

    # Add the new check constraint
    op.create_check_constraint(
        'valid_entity_type_dependencies',
        'topic_entity_tag',
        sa.sql.text("""
                    (
                        (entity_type IS NOT NULL AND entity IS NOT NULL AND entity_source IS NOT NULL)
                        OR
                        (entity_type IS NULL AND entity IS NULL AND entity_source IS NULL)
                    )
                """)
    )
    # ### end Alembic commands ###
