"""add_unique_constraints_to_xrefs

Revision ID: 176245023ef7
Revises: 8eceb3502d48
Create Date: 2022-10-25 21:40:38.401034

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '176245023ef7'
down_revision = '8eceb3502d48'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cross_reference', 'curie_prefix',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('cross_reference', 'date_created',
                    existing_type=postgresql.TIMESTAMP(),
                    nullable=False)
    op.execute('DROP TABLE cross_reference_version')
    op.execute('CREATE TABLE public.cross_reference_version (date_created timestamp without time zone, date_updated timestamp without time zone, cross_reference_id integer NOT NULL, curie character varying, curie_prefix character varying, is_obsolete boolean, reference_id integer, resource_id integer, pages character varying[], created_by character varying, updated_by character varying, transaction_id bigint NOT NULL, end_transaction_id bigint, operation_type smallint NOT NULL, date_created_mod boolean DEFAULT false NOT NULL, date_updated_mod boolean DEFAULT false NOT NULL, curie_mod boolean DEFAULT false NOT NULL, curie_prefix_mod boolean DEFAULT false NOT NULL, is_obsolete_mod boolean DEFAULT false NOT NULL, reference_id_mod boolean DEFAULT false NOT NULL, resource_id_mod boolean DEFAULT false NOT NULL, pages_mod boolean DEFAULT false NOT NULL, created_by_mod boolean DEFAULT false NOT NULL, updated_by_mod boolean DEFAULT false NOT NULL)')
    op.execute('ALTER TABLE public.cross_reference_version OWNER TO postgres')
    op.execute('ALTER TABLE ONLY public.cross_reference_version ADD CONSTRAINT cross_reference_version_pkey PRIMARY KEY (cross_reference_id, transaction_id)')
    op.execute('CREATE INDEX ix_cross_reference_version_curie ON public.cross_reference_version USING btree (curie)')
    op.execute('CREATE INDEX ix_cross_reference_version_end_transaction_id ON public.cross_reference_version USING btree (end_transaction_id)')
    op.execute('CREATE INDEX ix_cross_reference_version_operation_type ON public.cross_reference_version USING btree (operation_type)')
    op.execute('CREATE INDEX ix_cross_reference_version_reference_id ON public.cross_reference_version USING btree (reference_id)')
    op.execute('CREATE INDEX ix_cross_reference_version_resource_id ON public.cross_reference_version USING btree (resource_id)')
    op.execute('CREATE INDEX ix_cross_reference_version_transaction_id ON public.cross_reference_version USING btree (transaction_id)')
    op.create_index('idx_curie', 'cross_reference', ['curie'], unique=True, postgresql_where=sa.text('is_obsolete IS false'))
    op.create_index('idx_curie_prefix_reference', 'cross_reference', ['curie_prefix', 'reference_id'], unique=True, postgresql_where=sa.text('is_obsolete IS false AND reference_id IS NOT NULL'))
    op.create_index('idx_curie_prefix_resource', 'cross_reference', ['curie_prefix', 'resource_id'], unique=True, postgresql_where=sa.text("is_obsolete IS false AND resource_id IS NOT NULL AND curie_prefix = 'NLM'"))
    op.create_unique_constraint('uniq_mrt_new', 'mod_referencetype', ['mod_id', 'referencetype_id'])
    op.create_unique_constraint('uniq_rmrt', 'reference_mod_referencetype', ['reference_id', 'mod_referencetype_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uniq_rmrt', 'reference_mod_referencetype', type_='unique')
    op.drop_constraint('uniq_mrt_new', 'mod_referencetype', type_='unique')
    op.drop_index('idx_curie_prefix_resource', table_name='cross_reference')
    op.drop_index('idx_curie_prefix_reference', table_name='cross_reference')
    op.drop_index('idx_curie', table_name='cross_reference')
    op.alter_column('cross_reference', 'date_created',
                    existing_type=postgresql.TIMESTAMP(),
                    nullable=True)
    op.alter_column('cross_reference', 'curie_prefix',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    # ### end Alembic commands ###
