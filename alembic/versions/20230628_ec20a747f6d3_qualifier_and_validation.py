"""qualifier_and_validation

Revision ID: ec20a747f6d3
Revises: 87542e01f417
Create Date: 2023-06-28 16:00:23.360961

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ec20a747f6d3'
down_revision = '87542e01f417'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_topic_entity_tag_qualifier_mod_id', table_name='topic_entity_tag_qualifier')
    op.drop_index('ix_topic_entity_tag_qualifier_topic_entity_tag_id', table_name='topic_entity_tag_qualifier')
    op.drop_table('topic_entity_tag_qualifier')
    op.drop_index('ix_topic_entity_tag_qualifier_version_end_transaction_id', table_name='topic_entity_tag_qualifier_version')
    op.drop_index('ix_topic_entity_tag_qualifier_version_mod_id', table_name='topic_entity_tag_qualifier_version')
    op.drop_index('ix_topic_entity_tag_qualifier_version_operation_type', table_name='topic_entity_tag_qualifier_version')
    op.drop_index('ix_topic_entity_tag_qualifier_version_topic_entity_tag_id', table_name='topic_entity_tag_qualifier_version')
    op.drop_index('ix_topic_entity_tag_qualifier_version_transaction_id', table_name='topic_entity_tag_qualifier_version')
    op.drop_table('topic_entity_tag_qualifier_version')
    op.add_column('topic_entity_tag', sa.Column('display_tag', sa.String(), nullable=True))
    op.add_column('topic_entity_tag_source', sa.Column('negated', sa.Boolean(), nullable=False))
    op.add_column('topic_entity_tag_source', sa.Column('validation_value_author', sa.Boolean(), nullable=True))
    op.add_column('topic_entity_tag_source', sa.Column('validation_value_curation_tools', sa.Boolean(), nullable=True))
    op.add_column('topic_entity_tag_source', sa.Column('validation_value_curator', sa.Boolean(), nullable=True))
    op.drop_column('topic_entity_tag_source', 'validated')
    op.drop_column('topic_entity_tag_source', 'validation_type')
    op.add_column('topic_entity_tag_source_version', sa.Column('negated', sa.Boolean(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_source_version', sa.Column('negated_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_value_author', sa.Boolean(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_value_author_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_value_curation_tools', sa.Boolean(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_value_curation_tools_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_value_curator', sa.Boolean(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_value_curator_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.drop_column('topic_entity_tag_source_version', 'validated')
    op.drop_column('topic_entity_tag_source_version', 'validation_type_mod')
    op.drop_column('topic_entity_tag_source_version', 'validated_mod')
    op.drop_column('topic_entity_tag_source_version', 'validation_type')
    op.add_column('topic_entity_tag_version', sa.Column('display_tag', sa.String(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_version', sa.Column('display_tag_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('topic_entity_tag_version', 'display_tag_mod')
    op.drop_column('topic_entity_tag_version', 'display_tag')
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_source_version', sa.Column('validated_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('topic_entity_tag_source_version', sa.Column('validation_type_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('topic_entity_tag_source_version', sa.Column('validated', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('topic_entity_tag_source_version', 'validation_value_curator_mod')
    op.drop_column('topic_entity_tag_source_version', 'validation_value_curator')
    op.drop_column('topic_entity_tag_source_version', 'validation_value_curation_tools_mod')
    op.drop_column('topic_entity_tag_source_version', 'validation_value_curation_tools')
    op.drop_column('topic_entity_tag_source_version', 'validation_value_author_mod')
    op.drop_column('topic_entity_tag_source_version', 'validation_value_author')
    op.drop_column('topic_entity_tag_source_version', 'negated_mod')
    op.drop_column('topic_entity_tag_source_version', 'negated')
    op.add_column('topic_entity_tag_source', sa.Column('validation_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('topic_entity_tag_source', sa.Column('validated', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('topic_entity_tag_source', 'validation_value_curator')
    op.drop_column('topic_entity_tag_source', 'validation_value_curation_tools')
    op.drop_column('topic_entity_tag_source', 'validation_value_author')
    op.drop_column('topic_entity_tag_source', 'negated')
    op.drop_column('topic_entity_tag', 'display_tag')
    op.create_table('topic_entity_tag_qualifier_version',
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('topic_entity_tag_qualifier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('topic_entity_tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('qualifier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('qualifier_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mod_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('date_created_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('date_updated_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('topic_entity_tag_id_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('qualifier_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('qualifier_type_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('mod_id_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created_by_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('updated_by_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('topic_entity_tag_qualifier_id', 'transaction_id', name='topic_entity_tag_qualifier_version_pkey')
    )
    op.create_index('ix_topic_entity_tag_qualifier_version_transaction_id', 'topic_entity_tag_qualifier_version', ['transaction_id'], unique=False)
    op.create_index('ix_topic_entity_tag_qualifier_version_topic_entity_tag_id', 'topic_entity_tag_qualifier_version', ['topic_entity_tag_id'], unique=False)
    op.create_index('ix_topic_entity_tag_qualifier_version_operation_type', 'topic_entity_tag_qualifier_version', ['operation_type'], unique=False)
    op.create_index('ix_topic_entity_tag_qualifier_version_mod_id', 'topic_entity_tag_qualifier_version', ['mod_id'], unique=False)
    op.create_index('ix_topic_entity_tag_qualifier_version_end_transaction_id', 'topic_entity_tag_qualifier_version', ['end_transaction_id'], unique=False)
    op.create_table('topic_entity_tag_qualifier',
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('topic_entity_tag_qualifier_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_entity_tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('qualifier', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('qualifier_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mod_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='topic_entity_tag_qualifier_created_by_fkey'),
    sa.ForeignKeyConstraint(['mod_id'], ['mod.mod_id'], name='topic_entity_tag_qualifier_mod_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['topic_entity_tag_id'], ['topic_entity_tag.topic_entity_tag_id'], name='topic_entity_tag_qualifier_topic_entity_tag_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='topic_entity_tag_qualifier_updated_by_fkey'),
    sa.PrimaryKeyConstraint('topic_entity_tag_qualifier_id', name='topic_entity_tag_qualifier_pkey')
    )
    op.create_index('ix_topic_entity_tag_qualifier_topic_entity_tag_id', 'topic_entity_tag_qualifier', ['topic_entity_tag_id'], unique=False)
    op.create_index('ix_topic_entity_tag_qualifier_mod_id', 'topic_entity_tag_qualifier', ['mod_id'], unique=False)
    # ### end Alembic commands ###
