"""authors singular

Revision ID: c5edf0d9f2d4
Revises: d12acfffe675
Create Date: 2022-04-29 07:55:10.510090

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = 'c5edf0d9f2d4'
down_revision = 'd12acfffe675'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # The table itself
    op.rename_table('authors', 'author')
    # its sequence
    op.execute('ALTER SEQUENCE authors_author_id_seq RENAME TO author_author_id_seq')
    # Its Indexes
    op.execute('ALTER INDEX authors_pkey RENAME TO author_pkey')
    op.execute('ALTER INDEX ix_authors_orcid RENAME TO ix_author_orcid')
    op.execute('ALTER INDEX ix_authors_reference_id RENAME TO ix_author_reference_id')
    # Foreign Key Constraints?
    #  thse maybe okay as the keys are the same???

    # The table version
    op.rename_table('authors_version', 'author_version')
    # It has NO sequences.
    # ITs indexes
    op.execute('ALTER INDEX authors_version_pkey RENAME TO author_version_pkey')
    op.execute('ALTER INDEX ix_authors_version_end_transaction_id RENAME TO ix_author_version_end_transaction_id')
    op.execute('ALTER INDEX ix_authors_version_operation_type RENAME TO ix_author_version_operation_type')
    op.execute('ALTER INDEX ix_authors_version_orcid RENAME TO ix_author_version_orcid')
    op.execute('ALTER INDEX ix_authors_version_reference_id RENAME TO ix_author_version_reference_id')
    op.execute('ALTER INDEX ix_authors_version_transaction_id RENAME TO ix_author_version_transaction_id')
    # op.create_table('author_version',
    # sa.Column('author_id', sa.Integer(), autoincrement=False, nullable=False),
    # sa.Column('reference_id', sa.Integer(), autoincrement=False, nullable=True),
    # sa.Column('orcid', sa.String(), autoincrement=False, nullable=True),
    # sa.Column('first_author', sa.Boolean(), autoincrement=False, nullable=True),
    # sa.Column('order', sa.Integer(), autoincrement=False, nullable=True),
    # sa.Column('corresponding_author', sa.Boolean(), autoincrement=False, nullable=True),
    # sa.Column('name', sa.String(), autoincrement=False, nullable=True),
    # sa.Column('affiliations', sa.ARRAY(sa.String()), autoincrement=False, nullable=True),
    # sa.Column('first_name', sa.String(), autoincrement=False, nullable=True),
    # sa.Column('last_name', sa.String(), autoincrement=False, nullable=True),
    # sa.Column('date_updated', sa.DateTime(), autoincrement=False, nullable=True),
    # sa.Column('date_created', sa.DateTime(), autoincrement=False, nullable=True),
    # sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    # sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    # sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    # sa.Column('reference_id_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('orcid_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('first_author_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('order_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('corresponding_author_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('name_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('affiliations_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('first_name_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('last_name_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('date_updated_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.Column('date_created_mod', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    # sa.PrimaryKeyConstraint('author_id', 'transaction_id')
    # )
    # op.create_index(op.f('ix_author_version_end_transaction_id'), 'author_version', ['end_transaction_id'], unique=False)
    # op.create_index(op.f('ix_author_version_operation_type'), 'author_version', ['operation_type'], unique=False)
    # op.create_index(op.f('ix_author_version_orcid'), 'author_version', ['orcid'], unique=False)
    # op.create_index(op.f('ix_author_version_reference_id'), 'author_version', ['reference_id'], unique=False)
    # op.create_index(op.f('ix_author_version_transaction_id'), 'author_version', ['transaction_id'], unique=False)
    # op.create_table('author',
    # sa.Column('author_id', sa.Integer(), autoincrement=True, nullable=False),
    # sa.Column('reference_id', sa.Integer(), nullable=True),
    # sa.Column('orcid', sa.String(), nullable=True),
    # sa.Column('first_author', sa.Boolean(), nullable=True),
    # sa.Column('order', sa.Integer(), nullable=True),
    # sa.Column('corresponding_author', sa.Boolean(), nullable=True),
    # sa.Column('name', sa.String(), nullable=True),
    # sa.Column('affiliations', sa.ARRAY(sa.String()), nullable=True),
    # sa.Column('first_name', sa.String(), nullable=True),
    # sa.Column('last_name', sa.String(), nullable=True),
    # sa.Column('date_updated', sa.DateTime(), nullable=True),
    # sa.Column('date_created', sa.DateTime(), nullable=False),
    # sa.ForeignKeyConstraint(['orcid'], ['cross_references.curie'], ),
    # sa.ForeignKeyConstraint(['reference_id'], ['references.reference_id'], ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('author_id')
    # )
    # op.create_index(op.f('ix_author_orcid'), 'author', ['orcid'], unique=False)
    # op.create_index(op.f('ix_author_reference_id'), 'author', ['reference_id'], unique=False)
    # op.drop_index('ix_authors_version_end_transaction_id', table_name='authors_version')
    # op.drop_index('ix_authors_version_operation_type', table_name='authors_version')
    # op.drop_index('ix_authors_version_orcid', table_name='authors_version')
    # op.drop_index('ix_authors_version_reference_id', table_name='authors_version')
    # op.drop_index('ix_authors_version_transaction_id', table_name='authors_version')
    # op.drop_table('authors_version')
    # op.drop_index('ix_authors_orcid', table_name='authors')
    # op.drop_index('ix_authors_reference_id', table_name='authors')
    # op.drop_table('authors')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('authors',
    # sa.Column('author_id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('reference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('orcid', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('first_author', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('corresponding_author', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('affiliations', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    # sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['orcid'], ['cross_references.curie'], name='authors_orcid_fkey'),
    # sa.ForeignKeyConstraint(['reference_id'], ['references.reference_id'], name='authors_reference_id_fkey', ondelete='CASCADE'),
    # sa.PrimaryKeyConstraint('author_id', name='authors_pkey')
    # )
    # op.create_index('ix_authors_reference_id', 'authors', ['reference_id'], unique=False)
    # op.create_index('ix_authors_orcid', 'authors', ['orcid'], unique=False)
    # op.create_table('authors_version',
    # sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('reference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('orcid', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('first_author', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('corresponding_author', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('affiliations', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    # sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    # sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    # sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    # sa.Column('reference_id_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('orcid_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('first_author_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('order_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('corresponding_author_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('name_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('affiliations_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('first_name_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('last_name_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('date_updated_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.Column('date_created_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('author_id', 'transaction_id', name='authors_version_pkey')
    # )
    # op.create_index('ix_authors_version_transaction_id', 'authors_version', ['transaction_id'], unique=False)
    # op.create_index('ix_authors_version_reference_id', 'authors_version', ['reference_id'], unique=False)
    # op.create_index('ix_authors_version_orcid', 'authors_version', ['orcid'], unique=False)
    # op.create_index('ix_authors_version_operation_type', 'authors_version', ['operation_type'], unique=False)
    # op.create_index('ix_authors_version_end_transaction_id', 'authors_version', ['end_transaction_id'], unique=False)
    # op.drop_index(op.f('ix_author_reference_id'), table_name='author')
    # op.drop_index(op.f('ix_author_orcid'), table_name='author')
    # op.drop_table('author')
    # op.drop_index(op.f('ix_author_version_transaction_id'), table_name='author_version')
    # op.drop_index(op.f('ix_author_version_reference_id'), table_name='author_version')
    # op.drop_index(op.f('ix_author_version_orcid'), table_name='author_version')
    # op.drop_index(op.f('ix_author_version_operation_type'), table_name='author_version')
    # op.drop_index(op.f('ix_author_version_end_transaction_id'), table_name='author_version')
    # op.drop_table('author_version')
    op.rename_table('author', 'authors')
    # its sequence
    op.execute('ALTER SEQUENCE author_author_id_seq RENAME TO authors_author_id_seq')
    # Its Indexes
    op.execute('ALTER INDEX author_pkey RENAME TO authors_pkey')
    op.execute('ALTER INDEX ix_author_orcid RENAME TO ix_authors_orcid')
    op.execute('ALTER INDEX ix_author_reference_id RENAME TO ix_authors_reference_id')
    # Foreign Key Constraints?
    #  thse maybe okay as the keys are the same???

    # The table version
    op.rename_table('author_version', 'authors_version')
    # It has NO sequences.
    # ITs indexes
    op.execute('ALTER INDEX author_version_pkey RENAME TO authors_version_pkey')
    op.execute('ALTER INDEX ix_author_version_end_transaction_id RENAME TO ix_authors_version_end_transaction_id')
    op.execute('ALTER INDEX ix_author_version_operation_type RENAME TO ix_authors_version_operation_type')
    op.execute('ALTER INDEX ix_author_version_orcid RENAME TO ix_authors_version_orcid')
    op.execute('ALTER INDEX ix_author_version_reference_id RENAME TO ix_authors_version_reference_id')
    op.execute('ALTER INDEX ix_author_version_transaction_id RENAME TO ix_authors_version_transaction_id')    
    # ### end Alembic commands ###
