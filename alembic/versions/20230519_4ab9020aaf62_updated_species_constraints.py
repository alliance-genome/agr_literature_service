"""updated species constraints

Revision ID: 4ab9020aaf62
Revises: debffc478a32
Create Date: 2023-05-19 19:20:08.200805

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4ab9020aaf62'
down_revision = 'debffc478a32'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_topic_entity_tag_prop_topic_entity_tag_id', table_name='topic_entity_tag_prop')
    op.drop_table('topic_entity_tag_prop')
    op.drop_index('ix_topic_entity_tag_prop_version_end_transaction_id', table_name='topic_entity_tag_prop_version')
    op.drop_index('ix_topic_entity_tag_prop_version_operation_type', table_name='topic_entity_tag_prop_version')
    op.drop_index('ix_topic_entity_tag_prop_version_topic_entity_tag_id', table_name='topic_entity_tag_prop_version')
    op.drop_index('ix_topic_entity_tag_prop_version_transaction_id', table_name='topic_entity_tag_prop_version')
    op.drop_table('topic_entity_tag_prop_version')
    op.alter_column('topic_entity_tag', 'species',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index('ix_unique_topic_tag_with_species', 'topic_entity_tag', ['reference_id', 'topic', 'species'], unique=True, postgresql_where=sa.text('entity_type IS NULL AND species IS NOT NULL'))
    op.create_index('ix_unique_topic_tag_without_species', 'topic_entity_tag', ['reference_id', 'topic'], unique=True, postgresql_where=sa.text('entity_type IS NULL AND species IS NULL'))
    op.drop_index('ix_unique_topic_tag', table_name='topic_entity_tag')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_unique_topic_tag', 'topic_entity_tag', ['reference_id', 'topic', 'species'], unique=True)
    op.drop_index('ix_unique_topic_tag_without_species', table_name='topic_entity_tag')
    op.drop_index('ix_unique_topic_tag_with_species', table_name='topic_entity_tag')
    op.alter_column('topic_entity_tag', 'species',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('topic_entity_tag_prop_version',
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('topic_entity_tag_prop_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('topic_entity_tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('qualifier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('date_created_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('date_updated_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('topic_entity_tag_id_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('qualifier_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('created_by_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('updated_by_mod', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('topic_entity_tag_prop_id', 'transaction_id', name='topic_entity_tag_prop_version_pkey')
    )
    op.create_index('ix_topic_entity_tag_prop_version_transaction_id', 'topic_entity_tag_prop_version', ['transaction_id'], unique=False)
    op.create_index('ix_topic_entity_tag_prop_version_topic_entity_tag_id', 'topic_entity_tag_prop_version', ['topic_entity_tag_id'], unique=False)
    op.create_index('ix_topic_entity_tag_prop_version_operation_type', 'topic_entity_tag_prop_version', ['operation_type'], unique=False)
    op.create_index('ix_topic_entity_tag_prop_version_end_transaction_id', 'topic_entity_tag_prop_version', ['end_transaction_id'], unique=False)
    op.create_table('topic_entity_tag_prop',
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('topic_entity_tag_prop_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_entity_tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('qualifier', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='topic_entity_tag_prop_created_by_fkey'),
    sa.ForeignKeyConstraint(['topic_entity_tag_id'], ['topic_entity_tag.topic_entity_tag_id'], name='topic_entity_tag_prop_topic_entity_tag_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='topic_entity_tag_prop_updated_by_fkey'),
    sa.PrimaryKeyConstraint('topic_entity_tag_prop_id', name='topic_entity_tag_prop_pkey')
    )
    op.create_index('ix_topic_entity_tag_prop_topic_entity_tag_id', 'topic_entity_tag_prop', ['topic_entity_tag_id'], unique=False)
    # ### end Alembic commands ###
